version: '3.8'
services:
  app:
    build:
      args:
        user: tcontreras
        uid: 1001
      context: ./
      dockerfile: Dockerfile
    command:
        - /var/www/bin/_app_docker_init.sh
    tty: true
    image: platform
    container_name: platform-app
    working_dir: /var/www/
    volumes:
      - ./:/var/www:rw
  appfe:
      labels:
          - traefik.enable=true
          - traefik.http.routers.appfe-server.rule=PathPrefix(`/l/`) || PathPrefix(`/`)
          - traefik.http.services.appfe-server.loadbalancer.server.port=80
          - traefik.http.routers.appfe-server.entrypoints=http
      container_name: platform-fe
      build:
          context: ../Job-Post-FE
          dockerfile: Dockerfile
      ports:
          - "9580:80"
      volumes:
          - ../Job-Post-FE:/app:rw
      environment:
          MONGO_DB_DSN: ${MONGO_DB_DSN}
          PORT: 80
          REDIS_DB_DSN: redis://${REDIS_HOST}:${REDIS_PORT}/0?protocol=3
          APP_KEY: ${APP_KEY}
          SESSION_COOKIE_NAME: platform_session
          SESSION_PREFIX: platform_database_platform_cache_
      command:
          - go
          - run
          - .
          - app
  traefik:
      image: traefik:v2.9
      command:
          #- "--log.level=DEBUG"
          - "--api.insecure=true"
          - "--api.dashboard=true"
          - "--providers.docker=true"
          - "--providers.docker.exposedbydefault=false"
          - "--entrypoints.http.address=:80"
          - "--accesslog"
      ports:
          - "80:80"
          - "8080:8080"
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
  redis:
      container_name: platform-redis
      image: redis:alpine
      command: redis-server --appendonly yes #--requirepass "${REDIS_PASSWORD}"
      volumes:
          - ./data/redis:/data
      ports:
          - "6380:6379"
      environment:
          - ALLOW_EMPTY_PASSWORD=yes
  postgres:
      container_name: platform-pgdb
      image: postgres:14.7
      ports:
          - "5432:5432"
      volumes:
          - db-data_postgres:/var/lib/postgresql/data
      restart: always
      environment:
         # POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: ${DB_DATABASE}
          POSTGRES_USER: ${DB_USERNAME}
          POSTGRES_PASSWORD: ${DB_PASSWORD}

  mongo:
      container_name: platform-mgo
      image: mongo:latest
      restart: unless-stopped
      ports:
          - "27018:27017"
      volumes:
          - mongodb-data:/data/db
          - mongodb-log:/var/log/mongodb
      environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example

  nginx:
    labels:
          - traefik.enable=true
          - traefik.http.routers.nginx-server.rule=PathPrefix(`/a/`) || PathPrefix(`/login`)
          - traefik.http.services.nginx-server.loadbalancer.server.port=80
          - traefik.http.routers.nginx-server.entrypoints=http
    image: nginx:1.17-alpine
    container_name: platform-nginx
    restart: unless-stopped
    ports:
      - "9980:80"
    volumes:
      - ./:/var/www
      - ./storage:/var/www/html/storage
      - ./docker-compose/nginx:/etc/nginx/conf.d

volumes:
    db-data_postgres:
        driver: local
    mongodb-data:
        driver: local
    mongodb-log:
        driver: local
networks:
  platform:
    driver: bridge
