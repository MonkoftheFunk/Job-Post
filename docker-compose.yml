version: '3.8'
services:
  app:
    labels:
        - traefik.enable=true
        - traefik.http.routers.app-server.rule=PathPrefix(`/`) #TODO Filter to support backend admin
        - traefik.http.services.app-server.loadbalancer.server.port=80
        - traefik.http.routers.app-server.entrypoints=http
    build:
      args:
        user: tcontreras
        uid: 1001
      context: ./
      dockerfile: Dockerfile
    command:
        - /var/www/bin/_app_docker_init.sh
    tty: true
    image: platform
    container_name: platform-app
    working_dir: /var/www/
    volumes:
      - ./:/var/www:rw
  #TODO GOLANG Frontend server
  traefik:
      image: traefik:v2.9
      command:
          #- "--log.level=DEBUG"
          - "--api.insecure=true"
          - "--api.dashboard=true"
          - "--providers.docker=true"
          - "--providers.docker.exposedbydefault=false"
          - "--entrypoints.http.address=:80"
          - "--accesslog"
      ports:
          #- "80:80"
          - "8080:8080"
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
  redis:
      container_name: platform-redis
      image: redis:alpine
      command: redis-server --appendonly yes #--requirepass "${REDIS_PASSWORD}"
      volumes:
          - ./data/redis:/data
      ports:
          - "6380:6379"
      environment:
          - ALLOW_EMPTY_PASSWORD=yes
  postgres:
      container_name: platform-pgdb
      image: postgres:14.7
      ports:
          - "5432:5432"
      volumes:
          - db-data_postgres:/var/lib/postgresql/data
      restart: always
      environment:
         # POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: ${DB_DATABASE}
          POSTGRES_USER: ${DB_USERNAME}
          POSTGRES_PASSWORD: ${DB_PASSWORD}

  mongo:
      container_name: platform-mgo
      image: mongo:latest
      restart: unless-stopped
      ports:
          - "27018:27017"
      volumes:
          - ./tmp/mongodb:/bitnami/mongodb
      environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
          MONGODB_USERNAME: root
          MONGODB_PASSWORD: example
          MONGODB_DATABASE: jobpost

  nginx:
    image: nginx:1.17-alpine
    container_name: platform-nginx
    restart: unless-stopped
    ports:
      - "9180:80"
    volumes:
      - ./:/var/www
      - ./storage:/var/www/html/storage
      - ./docker-compose/nginx:/etc/nginx/conf.d

volumes:
    db-data_postgres:
        driver: "local"
networks:
  platform:
    driver: bridge
